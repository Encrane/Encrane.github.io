<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雪觅音</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-29T11:31:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Beibei Deng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>创建对象的7种模式</title>
    <link href="http://yoursite.com/2016/07/28/js_0001/"/>
    <id>http://yoursite.com/2016/07/28/js_0001/</id>
    <published>2016-07-28T09:07:36.000Z</published>
    <updated>2016-07-29T11:31:23.000Z</updated>
    
    <content type="html">&lt;p&gt;本文探讨了创建自定义对象的7种模式&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;1-工厂模式&quot;&gt;&lt;a href=&quot;#1-工厂模式&quot; class=&quot;headerlink&quot; title=&quot;1. 工厂模式&quot;&gt;&lt;/a&gt;1. 工厂模式&lt;/h4&gt;&lt;p&gt;工厂模式抽象创建具体对象的过程，在ECMAScript中用函数来封装以特定接口创建对象的细节。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createPerson&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	o.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	o.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	o.job = job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	o.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = createPerson(&lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以多次调用函数构建一个对象，每次都会返回包含三个属性和一个方法的对象，但是工厂模式虽然解决了创建多个相似对象的问题，却没有解决对象识别的问题。&lt;/p&gt;
&lt;h4 id=&quot;2-构造函数模式&quot;&gt;&lt;a href=&quot;#2-构造函数模式&quot; class=&quot;headerlink&quot; title=&quot;2.构造函数模式&quot;&gt;&lt;/a&gt;2.构造函数模式&lt;/h4&gt;&lt;p&gt;ECMAScript的构造函数可以创建特定类型的对象，如Object等原生构造函数运行时会自动出现在执行环境中。同时，也可以创建自定义的构造函数，从而定义自定义对象类型的属性和方法。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;&amp;#123;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job = job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayName = sayName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;与工厂模式不同，构造函数模式的特点有如下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;构造函数的函数名以大写字母开头，这个做法借鉴自其它OO语言，主要是为了区别于ECMAScript的其它函数，因为构造函数本身是函数，只是可以用来创建对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有显示创建对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建函数实例，必须使用new操作符，使用new调用，将构造函数的作用域赋给了新对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;直接将属性和方法赋给了this对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有return语句；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建的对象既是Object的实例，也是Person的实例；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建自定义的构造函数意味着可以将它的实例标识为一种特定的类型，这正是构造函数胜过工厂模式的地方。但是构造函数创建的对象方法，如上例子是在全局作用域中定义，但是却只能被某个对象调用，这让全局作用域失去了其作用，另外如果对象要定义很多方法，那么就要定义多个全局函数，导致引用类型的封装性差。&lt;/p&gt;
&lt;h4 id=&quot;3-原型模式&quot;&gt;&lt;a href=&quot;#3-原型模式&quot; class=&quot;headerlink&quot; title=&quot;3.原型模式&quot;&gt;&lt;/a&gt;3.原型模式&lt;/h4&gt;&lt;p&gt;每个函数都有prototype（原型）属性，这个属性是一个指针，指向一个对象，这个对象的用途包含可以由特定类型的所有实例共享的属性和方法，prototype就是通过调用构造函数而创建的那个对象实例的原型对象。不必再构造函数中定义对象实例的信息，而是将这些信息直接添加到原型对象中。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	Person.prototype = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 		name: &lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 		age: &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 		job: &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 		sayName: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		alert(person1.sayName == person2.sayName); &lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原型模式的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;与构造函数模式不同，新对象的属性和方法由所有实例共享；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当为对象实例添加一个属性时，这个属性会屏蔽原型对象中保存的同名属性，阻止访问原型中的属性，但不会修改原型属性；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于在原型中查找值是一次搜索过程，实例与原型之间的连接是一个指针而不是副本，所以可以先创建实例后添加原型属性和方法，且对原型对象所做的修改都可以在实例上反映出来（但重写原型对象除外）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不仅可以创建自定义类型，原生引用类型也是用原生模式创建，通过原生对象的原型，可以获取默认方法，也可以定义新方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原生模式的缺陷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;省略了为构造函数传递初始化参数环节，所有实例在默认情况下都取得相同的属性值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最大的问题是，原型所有属性被实例共享，在包含引用类型值的属性，而实例又需要有属于自己的属性，这个问题会比较突出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;4-组合使用构造函数模式和原型模式&quot;&gt;&lt;a href=&quot;#4-组合使用构造函数模式和原型模式&quot; class=&quot;headerlink&quot; title=&quot;4.组合使用构造函数模式和原型模式&quot;&gt;&lt;/a&gt;4.组合使用构造函数模式和原型模式&lt;/h4&gt;&lt;p&gt;构造函数模式定义实例属性，原型模式定义方法和共享的属性，这样，每个实例都有自己的实例属性副本，同时又共享方法的引用，最大限度地节省了内存。另外，此模式还支持向构造函数传递参数。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job = job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.friends = [&lt;span class=&quot;string&quot;&gt;&#39;Dora&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Bella&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Person.prototype = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	sayName: function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Dan&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Designer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&lt;span class=&quot;string&quot;&gt;&#39;Bob&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends); &lt;span class=&quot;comment&quot;&gt;//&quot;Dora&#39;, &#39;Bella&#39;,&#39;Bob&#39;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.friends); &lt;span class=&quot;comment&quot;&gt;//&quot;Dora&#39;, &#39;Bella&#39;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends == person2.friends) &lt;span class=&quot;comment&quot;&gt;//false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.sayName == person2.sayName) &lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种混合模式是目前运用最广泛的一种创建自定义的方法。&lt;/p&gt;
&lt;h4 id=&quot;5-动态原型模式&quot;&gt;&lt;a href=&quot;#5-动态原型模式&quot; class=&quot;headerlink&quot; title=&quot;5.动态原型模式&quot;&gt;&lt;/a&gt;5.动态原型模式&lt;/h4&gt;&lt;p&gt;动态原型模式把所有信息封装在构造函数中，而在必要的情况下在构造函数中初始化原型。具体做法是检查某个应该存在的方法是否有效，来决定是否需要初始化原型。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job = job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.friends = [&lt;span class=&quot;string&quot;&gt;&#39;Dora&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Bella&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayName != &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				Person.prototype.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 				alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 			&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person.sayName(); &lt;span class=&quot;comment&quot;&gt;//&#39;Mona&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在初次调用构造函数时才执行，此后，原型已初始化，不需要再做修改。对原型的修改能够立即在实例中得到反映。if 语句检查可以是初始化之后应该存在的属性和方法，不用检查每个属性和方法。但是不能使用对象字面量重写原型，因为如果已经创建了实例的情况下重写原型，会切断现有实例与新原型之间的联系。&lt;/p&gt;
&lt;h4 id=&quot;6-寄生构造函数模式&quot;&gt;&lt;a href=&quot;#6-寄生构造函数模式&quot; class=&quot;headerlink&quot; title=&quot;6.寄生构造函数模式&quot;&gt;&lt;/a&gt;6.寄生构造函数模式&lt;/h4&gt;&lt;p&gt;基本思想是创建一个函数，该函数用于封装创建对象的代码，然后在返回新创建的对象，其实跟工厂模式一模一样。如果我们想创建一个具有额外方法的对象，可以使用寄生构造函数模式。举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SpecialArray&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//创建数组&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; values = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//添加值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			values.push.apply(values, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//添加方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			values.toPipedString = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.join(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//返回数组&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; values；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpecialArray(&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pink&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		alert(colors.toPipedString()); &lt;span class=&quot;comment&quot;&gt;//&#39;red|pink|blue&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		alert(colors &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; SpecialArray); &lt;span class=&quot;comment&quot;&gt;//false		&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;`		&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;缺陷：返回的对象与构造函数或者构造函数的原型属性之间没有关系，也就是说，构造函数返回的对象与构造函数外部创建的对象没有什么不同，不能依赖instanceof操作符来确定对象类型。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### 7.稳妥构造函数模式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;所谓稳妥对象是指没有公共属性，而且方法不引用this的对象。稳妥构造函数模式与寄生构造函数模式类似，但是不同的是前者新创建对象的实例方法不引用this，不使用new操作符调用构造函数。举个例子：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;`&lt;span class=&quot;string&quot;&gt;``&lt;/span&gt; JavaScript&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age, job&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//创建要返回的对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//定义私有变量或者函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			o.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			o.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			o.job = job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//添加方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			o.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				alert(name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//返回对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&#39;Mona&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Font Engineer&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		person.sayName(); &lt;span class=&quot;comment&quot;&gt;//&#39;Mona&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;变量中保存的稳妥对象，除了调用私有方法外，没有别的办法访问传入到构造函数的原始数据。因此，适合在安全环境中或者防止数据被其他程序改动时使用。同样，返回的对象与构造函数或者构造函数的原型属性之间没有关系，不能依赖instanceof操作符来确定对象类型。        &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文探讨了创建自定义对象的7种模式&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>css布局汇总</title>
    <link href="http://yoursite.com/2016/07/02/css_0001/"/>
    <id>http://yoursite.com/2016/07/02/css_0001/</id>
    <published>2016-07-02T03:49:23.000Z</published>
    <updated>2016-07-05T10:06:41.000Z</updated>
    
    <content type="html">&lt;p&gt;作为前端工程师，一项重要的职责是对页面总体布局的掌控。需求提出到设计稿产出，前端工程师首要考虑的是项目运行的载体终端，怎样让我们的项目在规格不一的终端上做到自适应和响应式布局，本文将探讨布局的几种方法。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;流式布局&quot;&gt;&lt;a href=&quot;#流式布局&quot; class=&quot;headerlink&quot; title=&quot;流式布局&quot;&gt;&lt;/a&gt;流式布局&lt;/h4&gt;&lt;h5 id=&quot;关键词-百分比-浏览器&quot;&gt;&lt;a href=&quot;#关键词-百分比-浏览器&quot; class=&quot;headerlink&quot; title=&quot;关键词 百分比% 浏览器&quot;&gt;&lt;/a&gt;关键词 &lt;code&gt;百分比%&lt;/code&gt; &lt;code&gt;浏览器&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;流式布局的核心是使用百分比而不是像素设置，适用终端是pc浏览器。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.wrapper&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;83.333%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin &lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码运行的效果是容器wrapper的宽是浏览器宽的83.333%居中，不是多大分辨率的显示器上，内容宽都是83.333%。&lt;/p&gt;
&lt;h4 id=&quot;弹性布局&quot;&gt;&lt;a href=&quot;#弹性布局&quot; class=&quot;headerlink&quot; title=&quot;弹性布局&quot;&gt;&lt;/a&gt;弹性布局&lt;/h4&gt;&lt;h5 id=&quot;关键词-em-移动端&quot;&gt;&lt;a href=&quot;#关键词-em-移动端&quot; class=&quot;headerlink&quot; title=&quot;关键词 em 移动端&quot;&gt;&lt;/a&gt;关键词 &lt;code&gt;em&lt;/code&gt; &lt;code&gt;移动端&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;弹性布局相对于字号来设置元素的宽度，以em为单位，大多数浏览器的默认字体是16px，为了方便计算，设置基字号1em=10px,所以在主体上将字号设置为62.5%。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;62.5%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.wrapper&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;114em&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;max-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;95%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin &lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码运行的效果是容器wrapper的宽是1140px居中。基字号增加时整个布局会加大，所以弹性布局会变得比浏览器窗口宽，导致水平滚动条出现，为了防止这种情况，需要给容器添加max-width。&lt;/p&gt;
&lt;h4 id=&quot;高度相等的列&quot;&gt;&lt;a href=&quot;#高度相等的列&quot; class=&quot;headerlink&quot; title=&quot;高度相等的列&quot;&gt;&lt;/a&gt;高度相等的列&lt;/h4&gt;&lt;h5 id=&quot;关键词-弹性等高-底内边距&quot;&gt;&lt;a href=&quot;#关键词-弹性等高-底内边距&quot; class=&quot;headerlink&quot; title=&quot;关键词 弹性等高 底内边距&quot;&gt;&lt;/a&gt;关键词 &lt;code&gt;弹性等高&lt;/code&gt; &lt;code&gt;底内边距&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;我们经常会遇到等高列布局的形式，而元素的高度通常是由里面的内容撑开，所以一般不设置固定的高来实现等高列，可以采取如下的方法来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.wrapper&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;overflow&lt;/span&gt;: hidden;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.box&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;520px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;: -&lt;span class=&quot;number&quot;&gt;500px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;: left;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此方法的关键代码是padding-bottom: 520px和margin-bottom： -500px，给box设置较大的底内边距，然后用数值相似的负外边距消除这个高度。这会导致box溢出容器元素，用overflow：hidden实现溢出隐藏就可以了。&lt;/p&gt;
&lt;h4 id=&quot;非文本元素的垂直居中对齐&quot;&gt;&lt;a href=&quot;#非文本元素的垂直居中对齐&quot; class=&quot;headerlink&quot; title=&quot;非文本元素的垂直居中对齐&quot;&gt;&lt;/a&gt;非文本元素的垂直居中对齐&lt;/h4&gt;&lt;h5 id=&quot;关键词-垂直居中&quot;&gt;&lt;a href=&quot;#关键词-垂直居中&quot; class=&quot;headerlink&quot; title=&quot;关键词 垂直居中&quot;&gt;&lt;/a&gt;关键词 &lt;code&gt;垂直居中&lt;/code&gt;&lt;/h5&gt;&lt;p&gt;如何实现非文本元素的垂直居中对齐，这里介绍三种方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;display&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.parent&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: table-cell;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;vertical-align&lt;/span&gt;: middle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.child&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置父元素display属性为table-cell，让元素具有表格单元的属性，这样就可以用text-align来设置水平居中，vertical-align设置垂直居中。同时要让子元素具有内联块属性水平居中才能生效。&lt;/p&gt;
&lt;p&gt;优点：兼容性好,可以兼容到IE6&lt;/p&gt;
&lt;p&gt;缺点：代码量大&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;postion&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.parent&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.child&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translate&lt;/span&gt;(-50%,-50%);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用定位的方法实现居中很常见，不再赘述。&lt;/p&gt;
&lt;p&gt;优点：兼容性好,比display略逊一筹&lt;/p&gt;
&lt;p&gt;缺点：代码量大&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.parent&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;justify-content&lt;/span&gt;: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;align-items&lt;/span&gt;: center;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;flex布局很强大，但是目前浏览器支持不够，在实际项目中需谨慎使用。&lt;/p&gt;
&lt;p&gt;优点：代码量小，只需设置父元素&lt;/p&gt;
&lt;p&gt;缺点：兼容性差，IE9一下不支持&lt;/p&gt;
&lt;h4 id=&quot;多列对齐&quot;&gt;&lt;a href=&quot;#多列对齐&quot; class=&quot;headerlink&quot; title=&quot;多列对齐&quot;&gt;&lt;/a&gt;多列对齐&lt;/h4&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.parent&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: table; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.left&lt;/span&gt;,&lt;span class=&quot;selector-class&quot;&gt;.right&lt;/span&gt;,&lt;span class=&quot;selector-class&quot;&gt;.center&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: table-cell;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.left&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.1%&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;padding-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.left&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.center&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;padding-right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;依然是display方法实现一列固定，两列自适应布局。&lt;/p&gt;
&lt;h4 id=&quot;圣杯布局-amp-双飞翼布局比较&quot;&gt;&lt;a href=&quot;#圣杯布局-amp-双飞翼布局比较&quot; class=&quot;headerlink&quot; title=&quot;圣杯布局 &amp;amp; 双飞翼布局比较&quot;&gt;&lt;/a&gt;圣杯布局 &amp;amp; 双飞翼布局比较&lt;/h4&gt;&lt;p&gt;两者之前最大不同是前者用了postion定位&lt;/p&gt;
&lt;p&gt;具体可参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/imwtr/p/4441741.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局 – 圣杯布局 &amp;amp; 双飞翼布局&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://mona98.com/Baidu-IFE-Spring2016/task/stage1/task003/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;双飞翼布局DEMO&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;布局的形式和方法还有很多，后续有好的方法再继续补充。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作为前端工程师，一项重要的职责是对页面总体布局的掌控。需求提出到设计稿产出，前端工程师首要考虑的是项目运行的载体终端，怎样让我们的项目在规格不一的终端上做到自适应和响应式布局，本文将探讨布局的几种方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>markdown的语法</title>
    <link href="http://yoursite.com/2016/07/02/tool_0001/"/>
    <id>http://yoursite.com/2016/07/02/tool_0001/</id>
    <published>2016-07-02T03:49:23.000Z</published>
    <updated>2016-07-05T09:56:42.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Mou&quot;&gt;&lt;a href=&quot;#Mou&quot; class=&quot;headerlink&quot; title=&quot;Mou&quot;&gt;&lt;/a&gt;Mou&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://25.io/mou/Mou_128.png&quot; alt=&quot;Mou icon&quot;&gt;&lt;br&gt;markdown语法官方文档&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Mou&lt;/strong&gt;, the missing Markdown editor for &lt;em&gt;web developers&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Syntax&quot;&gt;&lt;a href=&quot;#Syntax&quot; class=&quot;headerlink&quot; title=&quot;Syntax&quot;&gt;&lt;/a&gt;Syntax&lt;/h3&gt;&lt;h4 id=&quot;Strong-and-Emphasize&quot;&gt;&lt;a href=&quot;#Strong-and-Emphasize&quot; class=&quot;headerlink&quot; title=&quot;Strong and Emphasize&quot;&gt;&lt;/a&gt;Strong and Emphasize&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;strong&lt;/strong&gt; or &lt;strong&gt;strong&lt;/strong&gt; ( Cmd + B )&lt;/p&gt;
&lt;p&gt;&lt;em&gt;emphasize&lt;/em&gt; or &lt;em&gt;emphasize&lt;/em&gt; ( Cmd + I )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sometimes I want a lot of text to be bold.&lt;br&gt;Like, seriously, a &lt;em&gt;LOT&lt;/em&gt; of text&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;Blockquotes&quot;&gt;&lt;a href=&quot;#Blockquotes&quot; class=&quot;headerlink&quot; title=&quot;Blockquotes&quot;&gt;&lt;/a&gt;Blockquotes&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Right angle brackets &amp;gt; are used for block quotes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Links-and-Email&quot;&gt;&lt;a href=&quot;#Links-and-Email&quot; class=&quot;headerlink&quot; title=&quot;Links and Email&quot;&gt;&lt;/a&gt;Links and Email&lt;/h4&gt;&lt;p&gt;An email &lt;a href=&quot;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;&amp;#x74;&amp;#111;&amp;#x3a;&amp;#101;&amp;#x78;&amp;#97;&amp;#109;&amp;#x70;&amp;#108;&amp;#x65;&amp;#x40;&amp;#x65;&amp;#120;&amp;#x61;&amp;#109;&amp;#112;&amp;#108;&amp;#101;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&quot;&gt;&amp;#101;&amp;#x78;&amp;#97;&amp;#109;&amp;#x70;&amp;#108;&amp;#x65;&amp;#x40;&amp;#x65;&amp;#120;&amp;#x61;&amp;#109;&amp;#112;&amp;#108;&amp;#101;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&lt;/a&gt; link.&lt;/p&gt;
&lt;p&gt;Simple inline link &lt;a href=&quot;http://chenluois.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chenluois.com&lt;/a&gt;, another inline link &lt;a href=&quot;http://25.io/smaller/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Smaller&lt;/a&gt;, one more inline link with title &lt;a href=&quot;http://resizesafari.com&quot; title=&quot;a Safari extension&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Resize&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&quot;http://25.io/mou/&quot; title=&quot;Markdown editor on Mac OS X&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reference style&lt;/a&gt; link. Input id, then anywhere in the doc, define the link with corresponding id:&lt;/p&gt;
&lt;p&gt;Titles ( or called tool tips ) in the links are optional.&lt;/p&gt;
&lt;h4 id=&quot;Images&quot;&gt;&lt;a href=&quot;#Images&quot; class=&quot;headerlink&quot; title=&quot;Images&quot;&gt;&lt;/a&gt;Images&lt;/h4&gt;&lt;p&gt;An inline image &lt;img src=&quot;http://25.io/smaller/favicon.ico&quot; alt=&quot;Smaller icon&quot; title=&quot;Title here&quot;&gt;, title is optional.&lt;/p&gt;
&lt;p&gt;A &lt;img src=&quot;http://resizesafari.com/favicon.ico&quot; alt=&quot;Resize icon&quot; title=&quot;Title&quot;&gt; reference style image.&lt;/p&gt;
&lt;h4 id=&quot;Inline-code-and-Block-code&quot;&gt;&lt;a href=&quot;#Inline-code-and-Block-code&quot; class=&quot;headerlink&quot; title=&quot;Inline code and Block code&quot;&gt;&lt;/a&gt;Inline code and Block code&lt;/h4&gt;&lt;p&gt;Inline code are surround by &lt;code&gt;backtick&lt;/code&gt; key. To create a block code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Indent each line by at least 1 tab, or 4 spaces.
var Mou = exactlyTheAppIwant; 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;Ordered-Lists&quot;&gt;&lt;a href=&quot;#Ordered-Lists&quot; class=&quot;headerlink&quot; title=&quot;Ordered Lists&quot;&gt;&lt;/a&gt;Ordered Lists&lt;/h4&gt;&lt;p&gt;Ordered lists are created using “1.” + Space:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ordered list item&lt;/li&gt;
&lt;li&gt;Ordered list item&lt;/li&gt;
&lt;li&gt;Ordered list item&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Unordered-Lists&quot;&gt;&lt;a href=&quot;#Unordered-Lists&quot; class=&quot;headerlink&quot; title=&quot;Unordered Lists&quot;&gt;&lt;/a&gt;Unordered Lists&lt;/h4&gt;&lt;p&gt;Unordered list are created using “*” + Space:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unordered list item&lt;/li&gt;
&lt;li&gt;Unordered list item&lt;/li&gt;
&lt;li&gt;Unordered list item &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or using “-“ + Space:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unordered list item&lt;/li&gt;
&lt;li&gt;Unordered list item&lt;/li&gt;
&lt;li&gt;Unordered list item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Hard-Linebreak&quot;&gt;&lt;a href=&quot;#Hard-Linebreak&quot; class=&quot;headerlink&quot; title=&quot;Hard Linebreak&quot;&gt;&lt;/a&gt;Hard Linebreak&lt;/h4&gt;&lt;p&gt;End a line with two or more spaces will create a hard linebreak, called &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; in HTML. ( Control + Return )&lt;br&gt;Above line ended with 2 spaces.&lt;/p&gt;
&lt;h4 id=&quot;Horizontal-Rules&quot;&gt;&lt;a href=&quot;#Horizontal-Rules&quot; class=&quot;headerlink&quot; title=&quot;Horizontal Rules&quot;&gt;&lt;/a&gt;Horizontal Rules&lt;/h4&gt;&lt;p&gt;Three or more asterisks or dashes:&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h4 id=&quot;Headers&quot;&gt;&lt;a href=&quot;#Headers&quot; class=&quot;headerlink&quot; title=&quot;Headers&quot;&gt;&lt;/a&gt;Headers&lt;/h4&gt;&lt;p&gt;Setext-style:&lt;/p&gt;
&lt;h1 id=&quot;This-is-H1&quot;&gt;&lt;a href=&quot;#This-is-H1&quot; class=&quot;headerlink&quot; title=&quot;This is H1&quot;&gt;&lt;/a&gt;This is H1&lt;/h1&gt;&lt;h2 id=&quot;This-is-H2&quot;&gt;&lt;a href=&quot;#This-is-H2&quot; class=&quot;headerlink&quot; title=&quot;This is H2&quot;&gt;&lt;/a&gt;This is H2&lt;/h2&gt;&lt;p&gt;atx-style:&lt;/p&gt;
&lt;h1 id=&quot;This-is-H1-1&quot;&gt;&lt;a href=&quot;#This-is-H1-1&quot; class=&quot;headerlink&quot; title=&quot;This is H1&quot;&gt;&lt;/a&gt;This is H1&lt;/h1&gt;&lt;h2 id=&quot;This-is-H2-1&quot;&gt;&lt;a href=&quot;#This-is-H2-1&quot; class=&quot;headerlink&quot; title=&quot;This is H2&quot;&gt;&lt;/a&gt;This is H2&lt;/h2&gt;&lt;h3 id=&quot;This-is-H3&quot;&gt;&lt;a href=&quot;#This-is-H3&quot; class=&quot;headerlink&quot; title=&quot;This is H3&quot;&gt;&lt;/a&gt;This is H3&lt;/h3&gt;&lt;h4 id=&quot;This-is-H4&quot;&gt;&lt;a href=&quot;#This-is-H4&quot; class=&quot;headerlink&quot; title=&quot;This is H4&quot;&gt;&lt;/a&gt;This is H4&lt;/h4&gt;&lt;h5 id=&quot;This-is-H5&quot;&gt;&lt;a href=&quot;#This-is-H5&quot; class=&quot;headerlink&quot; title=&quot;This is H5&quot;&gt;&lt;/a&gt;This is H5&lt;/h5&gt;&lt;h6 id=&quot;This-is-H6&quot;&gt;&lt;a href=&quot;#This-is-H6&quot; class=&quot;headerlink&quot; title=&quot;This is H6&quot;&gt;&lt;/a&gt;This is H6&lt;/h6&gt;&lt;h3 id=&quot;Extra-Syntax&quot;&gt;&lt;a href=&quot;#Extra-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Extra Syntax&quot;&gt;&lt;/a&gt;Extra Syntax&lt;/h3&gt;&lt;h4 id=&quot;Footnotes&quot;&gt;&lt;a href=&quot;#Footnotes&quot; class=&quot;headerlink&quot; title=&quot;Footnotes&quot;&gt;&lt;/a&gt;Footnotes&lt;/h4&gt;&lt;p&gt;Footnotes work mostly like reference-style links. A footnote is made of two things: a marker in the text that will become a superscript number; a footnote definition that will be placed in a list of footnotes at the end of the document. A footnote looks like this:&lt;/p&gt;
&lt;p&gt;That’s some text with a footnote.[^1]&lt;/p&gt;
&lt;p&gt;[^1]: And that’s the footnote.&lt;/p&gt;
&lt;h4 id=&quot;Strikethrough&quot;&gt;&lt;a href=&quot;#Strikethrough&quot; class=&quot;headerlink&quot; title=&quot;Strikethrough&quot;&gt;&lt;/a&gt;Strikethrough&lt;/h4&gt;&lt;p&gt;Wrap with 2 tilde characters:&lt;/p&gt;
&lt;p&gt;&lt;del&gt;Strikethrough&lt;/del&gt;&lt;/p&gt;
&lt;h4 id=&quot;Fenced-Code-Blocks&quot;&gt;&lt;a href=&quot;#Fenced-Code-Blocks&quot; class=&quot;headerlink&quot; title=&quot;Fenced Code Blocks&quot;&gt;&lt;/a&gt;Fenced Code Blocks&lt;/h4&gt;&lt;p&gt;Start with a line containing 3 or more backticks, and ends with the first line with the same number of backticks:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Fenced code blocks are like Stardard Markdown’s regular code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;blocks, except that they’re not indented and instead rely on&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a start and end fence lines to delimit the code block.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Tables&quot;&gt;&lt;a href=&quot;#Tables&quot; class=&quot;headerlink&quot; title=&quot;Tables&quot;&gt;&lt;/a&gt;Tables&lt;/h4&gt;&lt;p&gt;A simple table looks like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;th&gt;Third Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you wish, you can add a leading and tailing pipe to each line of the table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;th&gt;Third Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Specify alignment for each column by adding colons to separator lines:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;First Header&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Second Header&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Third Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Left&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Center&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Left&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Center&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;Right&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;Shortcuts&quot;&gt;&lt;a href=&quot;#Shortcuts&quot; class=&quot;headerlink&quot; title=&quot;Shortcuts&quot;&gt;&lt;/a&gt;Shortcuts&lt;/h3&gt;&lt;h4 id=&quot;View&quot;&gt;&lt;a href=&quot;#View&quot; class=&quot;headerlink&quot; title=&quot;View&quot;&gt;&lt;/a&gt;View&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Toggle live preview: Shift + Cmd + I&lt;/li&gt;
&lt;li&gt;Toggle Words Counter: Shift + Cmd + W&lt;/li&gt;
&lt;li&gt;Toggle Transparent: Shift + Cmd + T&lt;/li&gt;
&lt;li&gt;Toggle Floating: Shift + Cmd + F&lt;/li&gt;
&lt;li&gt;Left/Right = 1/1: Cmd + 0&lt;/li&gt;
&lt;li&gt;Left/Right = 3/1: Cmd + +&lt;/li&gt;
&lt;li&gt;Left/Right = 1/3: Cmd + -&lt;/li&gt;
&lt;li&gt;Toggle Writing orientation: Cmd + L&lt;/li&gt;
&lt;li&gt;Toggle fullscreen: Control + Cmd + F&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Actions&quot;&gt;&lt;a href=&quot;#Actions&quot; class=&quot;headerlink&quot; title=&quot;Actions&quot;&gt;&lt;/a&gt;Actions&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Copy HTML: Option + Cmd + C&lt;/li&gt;
&lt;li&gt;Strong: Select text, Cmd + B&lt;/li&gt;
&lt;li&gt;Emphasize: Select text, Cmd + I&lt;/li&gt;
&lt;li&gt;Inline Code: Select text, Cmd + K&lt;/li&gt;
&lt;li&gt;Strikethrough: Select text, Cmd + U&lt;/li&gt;
&lt;li&gt;Link: Select text, Control + Shift + L&lt;/li&gt;
&lt;li&gt;Image: Select text, Control + Shift + I&lt;/li&gt;
&lt;li&gt;Select Word: Control + Option + W&lt;/li&gt;
&lt;li&gt;Select Line: Shift + Cmd + L&lt;/li&gt;
&lt;li&gt;Select All: Cmd + A&lt;/li&gt;
&lt;li&gt;Deselect All: Cmd + D&lt;/li&gt;
&lt;li&gt;Convert to Uppercase: Select text, Control + U&lt;/li&gt;
&lt;li&gt;Convert to Lowercase: Select text, Control + Shift + U&lt;/li&gt;
&lt;li&gt;Convert to Titlecase: Select text, Control + Option + U&lt;/li&gt;
&lt;li&gt;Convert to List: Select lines, Control + L&lt;/li&gt;
&lt;li&gt;Convert to Blockquote: Select lines, Control + Q&lt;/li&gt;
&lt;li&gt;Convert to H1: Cmd + 1&lt;/li&gt;
&lt;li&gt;Convert to H2: Cmd + 2&lt;/li&gt;
&lt;li&gt;Convert to H3: Cmd + 3&lt;/li&gt;
&lt;li&gt;Convert to H4: Cmd + 4&lt;/li&gt;
&lt;li&gt;Convert to H5: Cmd + 5&lt;/li&gt;
&lt;li&gt;Convert to H6: Cmd + 6&lt;/li&gt;
&lt;li&gt;Convert Spaces to Tabs: Control + [&lt;/li&gt;
&lt;li&gt;Convert Tabs to Spaces: Control + ]&lt;/li&gt;
&lt;li&gt;Insert Current Date: Control + Shift + 1&lt;/li&gt;
&lt;li&gt;Insert Current Time: Control + Shift + 2&lt;/li&gt;
&lt;li&gt;Insert entity &amp;lt;: Control + Shift + ,&lt;/li&gt;
&lt;li&gt;Insert entity &amp;gt;: Control + Shift + .&lt;/li&gt;
&lt;li&gt;Insert entity &amp;amp;: Control + Shift + 7&lt;/li&gt;
&lt;li&gt;Insert entity Space: Control + Shift + Space&lt;/li&gt;
&lt;li&gt;Insert Scriptogr.am Header: Control + Shift + G&lt;/li&gt;
&lt;li&gt;Shift Line Left: Select lines, Cmd + [&lt;/li&gt;
&lt;li&gt;Shift Line Right: Select lines, Cmd + ]&lt;/li&gt;
&lt;li&gt;New Line: Cmd + Return&lt;/li&gt;
&lt;li&gt;Comment: Cmd + /&lt;/li&gt;
&lt;li&gt;Hard Linebreak: Control + Return&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Edit&quot;&gt;&lt;a href=&quot;#Edit&quot; class=&quot;headerlink&quot; title=&quot;Edit&quot;&gt;&lt;/a&gt;Edit&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Auto complete current word: Esc&lt;/li&gt;
&lt;li&gt;Find: Cmd + F&lt;/li&gt;
&lt;li&gt;Close find bar: Esc&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Post&quot;&gt;&lt;a href=&quot;#Post&quot; class=&quot;headerlink&quot; title=&quot;Post&quot;&gt;&lt;/a&gt;Post&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Post on Scriptogr.am: Control + Shift + S&lt;/li&gt;
&lt;li&gt;Post on Tumblr: Control + Shift + T&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Export&quot;&gt;&lt;a href=&quot;#Export&quot; class=&quot;headerlink&quot; title=&quot;Export&quot;&gt;&lt;/a&gt;Export&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Export HTML: Option + Cmd + E&lt;/li&gt;
&lt;li&gt;Export PDF:  Option + Cmd + P&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;And-more&quot;&gt;&lt;a href=&quot;#And-more&quot; class=&quot;headerlink&quot; title=&quot;And more?&quot;&gt;&lt;/a&gt;And more?&lt;/h3&gt;&lt;p&gt;Don’t forget to check Preferences, lots of useful options are there.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/mou&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Mou&lt;/a&gt; on Twitter for the latest news.&lt;/p&gt;
&lt;p&gt;For feedback, use the menu &lt;code&gt;Help&lt;/code&gt; - &lt;code&gt;Send Feedback&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mou&quot;&gt;&lt;a href=&quot;#Mou&quot; class=&quot;headerlink&quot; title=&quot;Mou&quot;&gt;&lt;/a&gt;Mou&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://25.io/mou/Mou_128.png&quot; alt=&quot;Mou icon&quot;&gt;&lt;br&gt;markdown语法官方文档&lt;/p&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
  </entry>
  
</feed>
